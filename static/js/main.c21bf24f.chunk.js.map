{"version":3,"sources":["Contents/Contants.js","Url.js","axios.js","Components/Banner/Banner.js","Components/Navabr/NavBar.js","Components/RowPost/RowPost.js","App.js","reportWebVitals.js","index.js"],"names":["API_KEY","imageUrl","orginals","action","comedy","horror","romance","documentaries","tranding","instance","axios","create","baseURL","Banner","useState","count","setCount","countless","movie","setMovie","idUrl","setIdUrl","useEffect","get","then","response","console","log","data","results","play","setPlay","addPlay","style","backgroundImage","backdrop_path","className","title","onClick","e","id","length","preventDefault","overview","videoId","opts","height","width","playerVars","autoplay","onReady","target","pauseVideo","onEnd","playVideo","onPlay","onPause","onStateChange","NavBar","src","alt","RowPost","props","movies","setMovies","url","map","obj","isSmall","key","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c21bf24f.chunk.js","sourcesContent":["export const baseUrl = \"https://api.themoviedb.org/3\";\r\nexport const API_KEY = \"2343953abace67f52e4c09b8cc10755f\";\r\nexport const imageUrl = 'https://image.tmdb.org/t/p/original'","import {API_KEY} from './Contents/Contants'\r\nexport const orginals = `discover/tv?api_key=${API_KEY}&with_networks=213`\r\nexport const action = `discover/movie?api_key=${API_KEY}&with_genres=28`\r\nexport const comedy= `discover/movie?api_key=${API_KEY}&with_genres=35`\r\nexport const horror= `discover/movie?api_key=${API_KEY}&with_genres=27`\r\nexport const romance= `discover/movie?api_key=${API_KEY}&with_genres=10749`\r\nexport const documentaries= `discover/movie?api_key=${API_KEY}&with_genres=99`\r\nexport const tranding = `trending/all/week?api_key=${API_KEY}&language=en-US`","import axios from 'axios'\r\nimport {baseUrl} from './Contents/Contants'\r\nconst instance = axios.create({\r\n  baseURL: baseUrl,\r\n  \r\n});\r\nexport default instance","\r\nimport React, {useEffect, useState} from 'react'\r\nimport {API_KEY,imageUrl} from '../../Contents/Contants'\r\nimport axios from '../../axios'\r\nimport Youtube from 'react-youtube'\r\nimport \"./Banner.css\"\r\n\r\n\r\nfunction Banner() {\r\n    \r\n    const [count,setCount] = useState(1)\r\n    const addCount=()=> {\r\n        setCount(count+1)\r\n    }\r\n    const [countless,setCountless] = useState(1)\r\n    const lessCount=()=> {\r\n        setCountless(countless-1)\r\n    }\r\n    const [movie, setMovie] = useState()  \r\n    \r\n    const [idUrl,setIdUrl] = useState('')\r\n  \r\n    useEffect(() => {\r\n       axios.get(`trending/all/week?api_key=${API_KEY}&language=en-US`).then((response) =>{\r\n           console.log(response.data.results[0])\r\n           setMovie(response.data.results[1+count])\r\n \r\n           \r\n           \r\n       })\r\n    }, [count,countless])\r\n    const [play,setPlay] = useState(false)\r\n    const addPlay=()=>{\r\n        setPlay(true)\r\n    }\r\n     \r\n    const opts = {\r\n      height: '400',\r\n      width: '100%',\r\n      playerVars: {\r\n        // https://developers.google.com/youtube/player_parameters\r\n        autoplay: 1,\r\n      },\r\n    };\r\n    // seting play to click\r\n    const handleClick = (e,id) => \r\n    {\r\n        axios.get(`movie/${id}/videos?api_key=${API_KEY}&language=en-U`).then(response=>{\r\n            if (response.data.results.length!==0) {\r\n                setIdUrl(response.data.results[0]+count)   \r\n            }else {\r\n                console.log(\"sorry\");\r\n            }\r\n        })\r\n        e.preventDefault()\r\n        addPlay()\r\n    }\r\n    \r\n    \r\n\r\n    \r\n    return (\r\n        <div\r\n        style = {{backgroundImage:`url(${ movie ? imageUrl+movie.backdrop_path: ''})`}}\r\n         className ='Banner'>\r\n            \r\n           \r\n            <div className ='Content'>\r\n                 \r\n                <h1 className ='title'>{movie ? movie.title : ''}</h1>\r\n                 <button className  ='button' onClick={addCount}> Next Movie</button>\r\n                 <button className  ='button' onClick={handleClick}> play</button>\r\n           \r\n                    \r\n\r\n                 \r\n                <div className ='banner_button'>\r\n                    \r\n                     \r\n                    \r\n                </div>\r\n                <h1 className ='description'>{movie ? movie.overview : ''}</h1>\r\n            </div>\r\n            \r\n            \r\n            <div className=\"fade-bottom\"></div><div className=\"Youtube\">\r\n\r\n            \r\n            {play  ? <Youtube videoId={idUrl} opts={opts} onReady={(e) => {\r\n                e.target.pauseVideo()\r\n                }} onEnd={(e) => {\r\n                    e.target.playVideo(movie.id)\r\n                    }} onPlay={(e) => {\r\n                        e.target.pauseVideo()\r\n                        }} onPause={(e) => {\r\n                            e.target.playVideo()\r\n                            }} onStateChange={(e) => {\r\n                                if(e.data === 0){\r\n                                    addPlay(false)\r\n                                }\r\n                                }}/> : ''}\r\n                       \r\n            \r\n            \r\n      \r\n             </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React from 'react'\r\nimport \"./NavBar.css\"\r\nfunction NavBar() {\r\n    return (\r\n        <div className  = 'navbar'>\r\n            <img className=\"logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1920px-Netflix_2015_logo.svg.png\r\n\" alt=\"netflix\" />\r\n<img className = \"avatar\" src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\" alt=\"avatar\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","import React,{useState,useEffect} from 'react'\r\nimport \"./RowPost.css\";\r\nimport {imageUrl,API_KEY} from '../../Contents/Contants'\r\nimport axios from\"../../axios\"\r\nimport Youtube from 'react-youtube'\r\nfunction RowPost(props) {\r\n    const [movies, setMovies] = useState([])\r\n    const [idUrl,setIdUrl] = useState('')\r\n  \r\n   useEffect(() => {\r\n       axios.get(props.url).then((response) => {\r\n           console.log(response.data);\r\n           setMovies(response.data.results)\r\n       })\r\n   }, [])\r\n   const opts = {\r\n      height: '390',\r\n      width: '100%',\r\n      playerVars: {\r\n        // https://developers.google.com/youtube/player_parameters\r\n        autoplay: 1,\r\n      },\r\n    };\r\n    const handlMovieClicks = (id)=>{\r\n        console.log(id);\r\n        axios.get(`movie/${id}/videos?api_key=${API_KEY}&language=en-U`).then(response=>{\r\n            if (response.data.results.length!==0) {\r\n             setIdUrl(response.data.results[0])   \r\n            }else {\r\n            console.log(\"sorry\"); }\r\n        })\r\n        \r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className ='Row'>\r\n            <h2>{props.title}</h2>\r\n            <div className ='posters'>\r\n                {movies.map((obj)=>\r\n                <img onClick={()=>handlMovieClicks(obj.id)} className={props.isSmall ? 'smallPoster':'poster'} src={`${imageUrl+obj.backdrop_path}`} alt=\"poster1\" />\r\n                )}\r\n            </div>\r\n        { idUrl &&   <Youtube videoId={idUrl.key} opts={opts} /> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RowPost\r\n","\nimport React from 'react';\nimport './App.css';\nimport {orginals,action,horror,comedy,romance,documentaries,tranding} from './Url'\nimport Banner from './Components/Banner/Banner';\nimport NavBar from './Components/Navabr/NavBar';\nimport RowPost from './Components/RowPost/RowPost';\nfunction App() {\n  return (\n    <div className=\"App\">\n       <NavBar/>\n       <Banner/>\n       <RowPost url={orginals} title=\"Netflix Orginals\"/>\n       <RowPost url={action} title=\"Actoin\" isSmall/>\n       <RowPost url={horror} title=\"Horror\" isSmall/>\n       <RowPost url={comedy} title=\"Comedy\" isSmall/>\n       <RowPost url={romance} title=\"Romance\" isSmall/>\n       <RowPost url={documentaries} title=\"Documetries\" isSmall/>\n       <RowPost url={tranding} title=\"Tranding\"/>\n       \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}